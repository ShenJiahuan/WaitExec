name: build

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: WaitExec-linux-amd64
          - os: macos-latest
            asset_name: WaitExec-macos-amd64

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          override: true

      - name: Get version
        run: |
          echo "VERSION=$(cargo pkgid | cut -d# -f2 | cut -d: -f2)" >> $GITHUB_ENV

      - name: Build
        run: |
          CARGO_TARGET_DIR=./build_assets cargo build --all --release
          strip ./build_assets/release/wait_exec

      - name: Create ZIP archive
        run: |
          zip -9vrj ./${{ matrix.asset_name }}.zip ./build_assets/release/wait_exec
          FILE=./${{ matrix.asset_name }}.zip
          DGST=./${{ matrix.asset_name }}.dgst
          openssl dgst -md5    $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha1   $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha256 $FILE | sed 's/([^)]*)//g' >>$DGST
          openssl dgst -sha512 $FILE | sed 's/([^)]*)//g' >>$DGST

      - name: Upload files to GitHub release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: v${{ env.VERSION }}
          tag_name: v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            ./${{ matrix.asset_name }}.zip
            ./${{ matrix.asset_name }}.dgst